import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;


public class TestMonth {
	
	private Month _month;
	private Year _yearLeap;
	private Year _year;
	private Year _yearInvalid;
	
	@Before
	public void initYear(){
		expectedException.expect(IllegalArgumentException.class);
		expectedException.expectMessage("Not a valid month");
		_yearLeap = new Year(2016);
		_year = new Year(2015);
		_yearInvalid = new Year(0);
	}
	
	@Rule
	public final ExpectedException expectedException = ExpectedException.none();
		
	
	@Test
	public void testGetYear(){
		_year = new Year(10);
		org.junit.Assert.assertEquals(10,_year.getYear());
	}
	
	@Test
	public void testIncrement(){
		_year = new Year(10);
		org.junit.Assert.assertTrue(_year.increment());
	}
		
	@Test
	public void testIsLeap() {
//		fail("Not yet implemented");
		_year = new Year(2000);
		org.junit.Assert.assertTrue(_year.isLeap());
		_year = new Year(1900);
		org.junit.Assert.assertFalse(_year.isLeap());
		_year = new Year(2016);
		org.junit.Assert.assertTrue(_year.isLeap());
		_year = new Year(-1);
		org.junit.Assert.assertTrue(_year.isLeap());
		_year = new Year(-101);
		org.junit.Assert.assertFalse(_year.isLeap());
		_year = new Year(-401);
		org.junit.Assert.assertTrue(_year.isLeap());
	}
	
	@Test
	public void testIsValid(){
		_month = new Month(0,_yearInvalid);
		org.junit.Assert.assertFalse(_month.isValid());
		_month = new Month(1,_yearInvalid);
		org.junit.Assert.assertFalse(_month.isValid());
		_month = new Month(5,_yearInvalid);
		org.junit.Assert.assertFalse(_month.isValid());
		_month = new Month(12,_yearInvalid);
		org.junit.Assert.assertFalse(_month.isValid());
		_month = new Month(13,_yearInvalid);
		org.junit.Assert.assertFalse(_month.isValid());
		
		_month = new Month(0,_year);
		org.junit.Assert.assertFalse(_month.isValid());
		_month = new Month(1,_year);
		org.junit.Assert.assertTrue(_month.isValid());
		_month = new Month(5,_year);
		org.junit.Assert.assertTrue(_month.isValid());
		_month = new Month(12,_year);
		org.junit.Assert.assertTrue(_month.isValid());
		_month = new Month(13,_year);
		org.junit.Assert.assertFalse(_month.isValid());
	}
	
	@Test
	public void testEquals(){
		_month = new Month(1,_yearLeap);
		org.junit.Assert.assertFalse(_month.equals(new Month(1,_year)));
		org.junit.Assert.assertFalse(_month.equals(new Month(2,_year)));
		org.junit.Assert.assertFalse(_month.equals(new Month(2,_yearLeap)));
		org.junit.Assert.assertFalse(_month.equals(new Month(1,_yearLeap)));
	}
}
